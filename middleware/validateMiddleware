import { body, validationResult } from "express-validator";
import { BadRequestError } from "../errors/customErrors.js";

const withValidationErrors = (validateValues) => {
  return [
    validateValues,
    (req, res, next) => {
      const errors = validationResult(req);
      if (!errors.isEmpty()) {
        const errorMessages = errors.array().map((error) => error.msg);
        throw new BadRequestError(errorMessages);
      }
      next();
    },
  ];
};

export const validateJob = withValidationErrors([
  // body("company").notEmpty().withMessage("Company name is required"),
  // body("position").notEmpty().withMessage("Position is required"),
  // body("jobLocation").notEmpty().withMessage("Job location is required"),
  // body("jobStatus")
  //   .isIn(Object.values(JobStatus))
  //   .withMessage("Invalid job status"),
  // body("jobType").isIn(Object.values(JobType)).withMessage("Invalid job type"),
]);
